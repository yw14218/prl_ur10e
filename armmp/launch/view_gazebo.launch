<?xml version="1.0"?>

<launch>
  <arg name="limited" default="false"  doc="If true, limits joint range [-PI, PI] on all joints." />
  <arg name="paused" default="false" doc="Starts gazebo in paused mode" />
  <arg name="gui" default="true" doc="Starts gazebo gui" />
  <arg name="sim" default="true" />
  <arg name="debug" default="false"/>
  <arg name="use_gui" default="false" />
  <arg name="load_robot_description" default="false"/>
  <arg name="db" default="false" />
  <!-- Allow user to specify database location -->
  <arg name="db_path" default="$(find armmp_moveit_config)/default_warehouse_mongo_db" />
  <!-- startup simulated world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <!--arg name="world_name" default="worlds/empty.world"/-->
    <arg name="world_name" default="$(find armmp)/armmp_description/worlds/ur10e_cubes.world"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="gui" value="$(arg gui)"/>
  </include>

  <!-- send robot urdf to param server -->
  <include file="$(find armmp_moveit_config)/launch/robot_upload.launch">
    <arg name="limited" value="$(arg limited)"/>
    
  </include>

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model"
        args="-urdf -param robot_description -model robot 
              -z 0.894
              -x -0.484
              -y -0.468
              -J shoulder_lift_joint -2.0
              -J elbow_joint 1.0"
        output="screen" />

  <!--controller-->
  <include file="$(find ur_e_gazebo)/launch/controller_utils.launch"/>
  <rosparam file="$(find armmp_moveit_config)/config/arm_controller_ur10e.yaml" command="load" />
  <rosparam file="$(find armmp_moveit_config)/config/robotiq_controller.yaml" command="load" />
  <node name="arm_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn arm_controller gripper" respawn="false" output="screen"/>

  <!-- load other controllers -->
  <node name="ros_control_controller_manager" pkg="controller_manager" type="controller_manager" respawn="false" output="screen" args="load joint_group_position_controller" />
  
</launch>
